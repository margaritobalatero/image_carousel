{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\dashboard.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\dashboard.jsx\");\n}\n// REMIX HMR END\n\nimport { useLoaderData, Form } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { connectDB, Item } from \"../utils/db.server.js\";\nimport { useState } from \"react\";\nimport \"../styles/carousel.css?__remix_sideEffect__\";\n\n// Loader: fetch items with optional search, newest first\nexport async function loader({\n  request\n}) {\n  await connectDB();\n  const url = new URL(request.url);\n  const search = url.searchParams.get(\"q\") || \"\";\n  const items = await Item.find(search ? {\n    caption: new RegExp(search, \"i\")\n  } : {}).sort({\n    _id: -1\n  });\n  return json({\n    items,\n    search\n  });\n}\n\n// Action: handle delete and update requests\nexport async function action({\n  request\n}) {\n  await connectDB();\n  const formData = await request.formData();\n  const _id = formData.get(\"_id\");\n  const actionType = formData.get(\"action\");\n  if (actionType === \"delete\" && _id) {\n    await Item.findByIdAndDelete(_id);\n  }\n  if (actionType === \"update\" && _id) {\n    const caption = formData.get(\"caption\");\n    const mediaUrl = formData.get(\"mediaUrl\");\n    await Item.findByIdAndUpdate(_id, {\n      caption,\n      mediaUrl\n    });\n  }\n  return redirect(\"/dashboard\");\n}\n\n// Utility: convert YouTube URL to embed\nfunction getYouTubeEmbedUrl(url) {\n  try {\n    const ytMatch = url.match(/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:watch\\?v=|embed\\/)|youtu\\.be\\/)([\\w\\-]{11})/);\n    if (ytMatch && ytMatch[1]) {\n      return `https://www.youtube.com/embed/${ytMatch[1]}`;\n    }\n  } catch (err) {\n    console.error(\"YouTube parse error:\", err);\n  }\n  return null;\n}\nexport default function Dashboard() {\n  _s();\n  const {\n    items,\n    search\n  } = useLoaderData();\n  const [editingId, setEditingId] = useState(null);\n  const [detailItem, setDetailItem] = useState(null); // for modal\n\n  return <div className=\"carousel-container\">\r\n      <h1>\uD83C\uDFA0 Media Carousel</h1>\r\n\r\n      {/* Search Form */}\r\n      <Form method=\"get\" className=\"search-form\">\r\n        <input type=\"text\" name=\"q\" defaultValue={search} placeholder=\"Search caption...\" />\n        \r\n        <button type=\"submit\">\uD83D\uDD0D Search</button>\r\n      </Form>\r\n\r\n      {/* Carousel */}\r\n      <div className=\"carousel\">\r\n        {items.map(item => {\n        const youtubeEmbed = getYouTubeEmbedUrl(item.mediaUrl);\n        const isEditing = editingId === item._id;\n        return <div className=\"carousel-item\" key={item._id}>\r\n              {item.type === \"image\" ? <img src={item.mediaUrl} alt={item.caption} /> : youtubeEmbed ? <iframe width=\"250\" height=\"180\" src={youtubeEmbed} title={item.caption} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerPolicy=\"strict-origin-when-cross-origin\" allowFullScreen style={{\n            borderRadius: \"12px\"\n          }}>\n              </iframe> : <video src={item.mediaUrl} controls playsInline preload=\"metadata\" style={{\n            borderRadius: \"12px\",\n            width: \"250px\",\n            height: \"180px\",\n            objectFit: \"cover\"\n          }}>\n                \r\n                  Your browser does not support the video tag.\r\n                </video>}\r\n\r\n              <p>{item.caption}</p>\r\n\r\n              {/* Delete Button */}\r\n              <Form method=\"post\" className=\"d-inline mb-1\">\r\n                <input type=\"hidden\" name=\"_id\" value={item._id} />\r\n                <input type=\"hidden\" name=\"action\" value=\"delete\" />\r\n                <button className=\"btn btn-danger btn-sm w-100\">Delete</button>\r\n              </Form>\r\n\r\n              {/* Update Section */}\r\n              {isEditing ? <Form method=\"post\" className=\"mt-1\">\r\n                  <input type=\"hidden\" name=\"_id\" value={item._id} />\r\n                  <input type=\"hidden\" name=\"action\" value=\"update\" />\r\n                  <input type=\"text\" name=\"caption\" defaultValue={item.caption} placeholder=\"Caption\" className=\"form-control mb-1\" required />\n                \r\n                  <input type=\"text\" name=\"mediaUrl\" defaultValue={item.mediaUrl} placeholder=\"Media URL\" className=\"form-control mb-1\" required />\n                \r\n                  <button type=\"submit\" className=\"btn btn-success btn-sm w-100 mb-1\">\n                  \r\n                    Save\r\n                  </button>\r\n                  <button type=\"button\" className=\"btn btn-secondary btn-sm w-100\" onClick={() => setEditingId(null)}>\n                  \r\n                    Cancel\r\n                  </button>\r\n                </Form> : <button className=\"btn btn-primary btn-sm w-100 mt-1\" onClick={() => setEditingId(item._id)}>\n                \r\n                  Update\r\n                </button>}\r\n\r\n              {/* Detail Button */}\r\n              <button className=\"btn btn-info btn-sm w-100 mt-1\" onClick={() => setDetailItem(item)}>\n                \r\n                Details\r\n              </button>\r\n            </div>;\n      })}\r\n      </div>\r\n\r\n      {/* Modal for Detail */}\r\n      {detailItem && <div className=\"modal-overlay\" onClick={() => setDetailItem(null)}>\r\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n          \r\n            <h3>{detailItem.caption}</h3>\r\n            {detailItem.type === \"image\" ? <img src={detailItem.mediaUrl} alt={detailItem.caption} style={{\n          maxWidth: \"100%\",\n          borderRadius: \"12px\"\n        }} /> : getYouTubeEmbedUrl(detailItem.mediaUrl) ? <iframe width=\"560\" height=\"315\" src={getYouTubeEmbedUrl(detailItem.mediaUrl)} title={detailItem.caption} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerPolicy=\"strict-origin-when-cross-origin\" allowFullScreen style={{\n          borderRadius: \"12px\"\n        }}>\n          </iframe> : <video src={detailItem.mediaUrl} controls autoPlay style={{\n          maxWidth: \"100%\",\n          borderRadius: \"12px\"\n        }}>\n            \r\n                Your browser does not support the video tag.\r\n              </video>}\r\n            <button className=\"btn btn-secondary mt-2\" onClick={() => setDetailItem(null)}>\n            \r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>}\r\n\r\n      <a href=\"/add\" className=\"add-link\">\r\n        \u2795 Add Media\r\n      </a>\r\n      <br />\r\n      <a href=\"/login\" className=\"add-link\">\r\n        \u2795 Logout\r\n      </a>\r\n    </div>;\n}\n_s(Dashboard, \"QSec/etP5oVt6hWjNvsTwNWLvzw=\", false, function () {\n  return [useLoaderData];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
