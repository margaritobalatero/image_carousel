{
  "version": 3,
  "sources": ["../../../app/routes/add.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\add.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\add.jsx\");\n  import.meta.hot.lastModified = \"1761404922116.613\";\n}\n// REMIX HMR END\n\nimport { Form, redirect } from \"@remix-run/react\";\nimport { connectDB, Item } from \"../utils/db.server.js\";\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const caption = formData.get(\"caption\");\n  const mediaUrl = formData.get(\"mediaUrl\");\n  const type = formData.get(\"type\");\n  await connectDB();\n  await Item.create({\n    caption,\n    mediaUrl,\n    type\n  });\n  return redirect(\"/dashboard\");\n}\nexport default function AddItem() {\n  return <div className=\"add-page\">\r\n      <h1>Add Media</h1>\r\n      <Form method=\"post\">\r\n        <input name=\"caption\" placeholder=\"Caption\" required />\r\n        <input name=\"mediaUrl\" placeholder=\"Image or Video URL\" required />\r\n        <select name=\"type\">\r\n          <option value=\"image\">Image</option>\r\n          <option value=\"video\">Video</option>\r\n        </select>\r\n        <button type=\"submit\">Add</button>\r\n      </Form>\r\n      <a href=\"/dashboard\">\u2B05 Back</a>\r\n    </div>;\n}\n_c = AddItem;\nvar _c;\n$RefreshReg$(_c, \"AddItem\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAqBA,uBAAgC;AAkB1B;AAtCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+BAAiC,EAAE;AAAA,EAC5E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AAoBe,SAAR,UAA2B;AAChC,SAAO,mDAAC,SAAI,WAAU,YAClB;AAAA,uDAAC,QAAG,yBAAJ;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,MAAK,WAAU,aAAY,WAAU,UAAQ,QAApD;AAAA;AAAA;AAAA;AAAA,aAAqD;AAAA,MACrD,mDAAC,WAAM,MAAK,YAAW,aAAY,sBAAqB,UAAQ,QAAhE;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA,MACjE,mDAAC,YAAO,MAAK,QACX;AAAA,2DAAC,YAAO,OAAM,SAAQ,qBAAtB;AAAA;AAAA;AAAA;AAAA,eAA2B;AAAA,QAC3B,mDAAC,YAAO,OAAM,SAAQ,qBAAtB;AAAA;AAAA;AAAA;AAAA,eAA2B;AAAA,WAF7B;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,YAAO,MAAK,UAAS,mBAAtB;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SAP3B;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IACA,mDAAC,OAAE,MAAK,cAAa,2BAArB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,OAXxB;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
